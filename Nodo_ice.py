# -*- coding: utf-8 -*-
#
# Copyright (c) ZeroC, Inc. All rights reserved.
#
#
# Ice version 3.7.9
#
# <auto-generated>
#
# Generated from file `Nodo.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>
#

from sys import version_info as _version_info_
import Ice, IcePy

# Start of module Multiparte
_M_Multiparte = Ice.openModule('Multiparte')
__name__ = 'Multiparte'

if 'NotReadyError' not in _M_Multiparte.__dict__:
    _M_Multiparte.NotReadyError = Ice.createTempClass()
    class NotReadyError(Ice.UserException):
        def __init__(self):
            pass

        def __str__(self):
            return IcePy.stringifyException(self)

        __repr__ = __str__

        _ice_id = '::Multiparte::NotReadyError'

    _M_Multiparte._t_NotReadyError = IcePy.defineException('::Multiparte::NotReadyError', NotReadyError, (), False, None, ())
    NotReadyError._ice_type = _M_Multiparte._t_NotReadyError

    _M_Multiparte.NotReadyError = NotReadyError
    del NotReadyError

_M_Multiparte._t_Nodo = IcePy.defineValue('::Multiparte::Nodo', Ice.Value, -1, (), False, True, None, ())

if 'NodoPrx' not in _M_Multiparte.__dict__:
    _M_Multiparte.NodoPrx = Ice.createTempClass()
    class NodoPrx(Ice.ObjectPrx):

        def getMyPart(self, s, context=None):
            return _M_Multiparte.Nodo._op_getMyPart.invoke(self, ((s, ), context))

        def getMyPartAsync(self, s, context=None):
            return _M_Multiparte.Nodo._op_getMyPart.invokeAsync(self, ((s, ), context))

        def begin_getMyPart(self, s, _response=None, _ex=None, _sent=None, context=None):
            return _M_Multiparte.Nodo._op_getMyPart.begin(self, ((s, ), _response, _ex, _sent, context))

        def end_getMyPart(self, _r):
            return _M_Multiparte.Nodo._op_getMyPart.end(self, _r)

        def getPartialSum(self, context=None):
            return _M_Multiparte.Nodo._op_getPartialSum.invoke(self, ((), context))

        def getPartialSumAsync(self, context=None):
            return _M_Multiparte.Nodo._op_getPartialSum.invokeAsync(self, ((), context))

        def begin_getPartialSum(self, _response=None, _ex=None, _sent=None, context=None):
            return _M_Multiparte.Nodo._op_getPartialSum.begin(self, ((), _response, _ex, _sent, context))

        def end_getPartialSum(self, _r):
            return _M_Multiparte.Nodo._op_getPartialSum.end(self, _r)

        def getFinalSum(self, context=None):
            return _M_Multiparte.Nodo._op_getFinalSum.invoke(self, ((), context))

        def getFinalSumAsync(self, context=None):
            return _M_Multiparte.Nodo._op_getFinalSum.invokeAsync(self, ((), context))

        def begin_getFinalSum(self, _response=None, _ex=None, _sent=None, context=None):
            return _M_Multiparte.Nodo._op_getFinalSum.begin(self, ((), _response, _ex, _sent, context))

        def end_getFinalSum(self, _r):
            return _M_Multiparte.Nodo._op_getFinalSum.end(self, _r)

        @staticmethod
        def checkedCast(proxy, facetOrContext=None, context=None):
            return _M_Multiparte.NodoPrx.ice_checkedCast(proxy, '::Multiparte::Nodo', facetOrContext, context)

        @staticmethod
        def uncheckedCast(proxy, facet=None):
            return _M_Multiparte.NodoPrx.ice_uncheckedCast(proxy, facet)

        @staticmethod
        def ice_staticId():
            return '::Multiparte::Nodo'
    _M_Multiparte._t_NodoPrx = IcePy.defineProxy('::Multiparte::Nodo', NodoPrx)

    _M_Multiparte.NodoPrx = NodoPrx
    del NodoPrx

    _M_Multiparte.Nodo = Ice.createTempClass()
    class Nodo(Ice.Object):

        def ice_ids(self, current=None):
            return ('::Ice::Object', '::Multiparte::Nodo')

        def ice_id(self, current=None):
            return '::Multiparte::Nodo'

        @staticmethod
        def ice_staticId():
            return '::Multiparte::Nodo'

        def getMyPart(self, s, current=None):
            raise NotImplementedError("servant method 'getMyPart' not implemented")

        def getPartialSum(self, current=None):
            raise NotImplementedError("servant method 'getPartialSum' not implemented")

        def getFinalSum(self, current=None):
            raise NotImplementedError("servant method 'getFinalSum' not implemented")

        def __str__(self):
            return IcePy.stringify(self, _M_Multiparte._t_NodoDisp)

        __repr__ = __str__

    _M_Multiparte._t_NodoDisp = IcePy.defineClass('::Multiparte::Nodo', Nodo, (), None, ())
    Nodo._ice_type = _M_Multiparte._t_NodoDisp

    Nodo._op_getMyPart = IcePy.Operation('getMyPart', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (((), IcePy._t_string, False, 0),), (), ((), IcePy._t_int, False, 0), (_M_Multiparte._t_NotReadyError,))
    Nodo._op_getPartialSum = IcePy.Operation('getPartialSum', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (), (), ((), IcePy._t_int, False, 0), (_M_Multiparte._t_NotReadyError,))
    Nodo._op_getFinalSum = IcePy.Operation('getFinalSum', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (), (), ((), IcePy._t_int, False, 0), (_M_Multiparte._t_NotReadyError,))

    _M_Multiparte.Nodo = Nodo
    del Nodo

# End of module Multiparte
